// // --------------------------
// // Breakpoints
// // --------------------------
// // 1. set basic breakpoints (depending on the content)
// // 2. if there are situations where breakpoint doesn't do the trick, you can
// //    introduce a new one with namespace, like site-header-medium
// // - there are situation where you need reversed media query. You can pass argument to the mixin to do that.

// $breakpoints: (
//     // General
//     'small': 40em, // 640px
//     'medium': 65em, // 1040px point where we stack columns below each other
//     'large': 92.5em, // 1480px white space on the sides appears/disappers fixed
//     // Local
//     'example-medium': 50em, // 800px
//     'example-large': 83.75em, // 1340px
// ) !default;

// // Example Usage
// // --------------------------
// // .example {
// //   @include respond-to(small) {
// //     ahoj: kopretino;
// //   }
// // @include respond-to(medium, min) {
// //   // this targets medium and larger resolutions
// // }
// // }

// // Breakpoints manager
// // --------------------------
// // change max-width for min-width, if you want to use mobile-first approach
// // more info: http://www.sitepoint.com/breakpoints-tweakpoints-sass/

// @mixin respond-to($point, $type: 'max') {
//     $addon: 0;

//     @if $type == 'min' {
//         $addon: 1px;
//     }

//     @if map-has-key($breakpoints, $point) {
//         @media (#{type}-width: map-get($breakpoints, $point) + $addon) {
//             @content;
//         }
//     }

//     // mixin for retina images
//     @else if $point == retina {
//         @media (min--moz-device-pixel-ratio: 1.3), (-o-min-device-pixel-ratio: 2.6/2), (-webkit-min-device-pixel-ratio: 1.3), (min-device-pixel-ratio: 1.3), (min-resolution: 1.3dppx) {
//             @content;
//         }
//     }

//     @else {
//         @warn 'Could not find `#{$breakpoint}` in both local ($tweakpoints) and global ($breakpoints) contexts. Media block omitted.';
//     }
// }
